services:
  service1-python:
    build: ./service1-python/
    ports:
      - "8000:8000"
    container_name: service1-python
    volumes:
      - ./logs:/app/logs
      - sqlite_data:/app
    networks:
      - backend

  service2-golang:
    build: ./service2-golang/
    ports:
      - "8080:8080"
    container_name: service2-golang
    volumes:
      - ./logs:/logs
      - sqlite_data:/app/data
    networks:
      - backend

  filebeat:
    build: ./filebeat/
    container_name: filebeat
    volumes:
      - ./logs:/src/logs
    depends_on:
      - service1-python
      - service2-golang
      - elasticsearch
      - kibana
    network_mode: "host"

  elasticsearch:
    build: ./elasticsearch/
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    build: ./kibana/
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  nginx:
    image: nginx:latest
    hostname: nginx
    container_name: nginx
    platform: linux/amd64
    restart: always
    ports:
      - "80:80"
    depends_on:
      - service1-python
      - service2-golang
    networks:
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/var/log/nginx

volumes:
  elasticsearch_data:
    driver: local

  sqlite_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/service1-python/

networks:
  backend:

